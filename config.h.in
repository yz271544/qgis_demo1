//
// Created by Lyndon on 2024/12/17.
//

#ifndef CONFIG_H
#define CONFIG_H
#if _MSC_VER >= 1600
#pragma execution_character_set("utf-8")
#endif
#if defined(_WIN32)
#include <windows.h>
#endif

inline const char* QGIS_LAYER_ENCODING = "UTF-8";
inline const char* BASE_TILE_NAME = "BaseTile";
inline const char* MAIN_TILE_NAME = "MainTile";
inline const char* REAL3D_TILE_NAME = "Real3DTile";

#if defined(_WIN32)
// for Windows
inline const char* QGIS_PREFIX_PATH = "D:/iProject/cpath/OSGeo4W/apps/qgis";
inline const char* QGIS_PROJECT_PATH = "D:/iProject/cpath/qgis_demo1/common/project";
inline const char* QGIS_PROJECT_FILE_NAME = "/project3d1.qgz";
#elif defined(__linux__)
// for Linux
inline const char* QGIS_PREFIX_PATH = "@QGIS_PREFIX_PATH@";
inline const char* QGIS_PROJECT_PATH = "/lyndon/iProject/cpath/qgis_demo1/common/project";
inline const char* QGIS_PROJECT_FILE_NAME = "/project3d1.qgz";
#endif

// Function to get boolean value from environment variable
inline bool getEnvBool(const char* envVarName, bool defaultValue = false) {
    const char* envValue = std::getenv(envVarName);
    if (envValue == nullptr) {
        return defaultValue;
    }
    std::string value(envValue);
    std::transform(value.begin(), value.end(), value.begin(), [](unsigned char c) { return std::tolower(c); });
    if (value == "true" || value == "1") {
        return true;
    } else if (value == "false" || value == "0") {
        return false;
    }
    return defaultValue;
}


// Get ENABLE_POINT_CLUSTER from environment variable, default to false
inline bool ENABLE_POINT_CLUSTER = getEnvBool("ENABLE_POINT_CLUSTER", false);

#endif //CONFIG_H
